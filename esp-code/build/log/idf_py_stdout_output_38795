[1/10] Performing build step for 'bootloader'
[1/1] cd /home/charles/Documents/github/CCI_UdeS/code/build/bootloader/esp-idf/esptool_py && /home/charles/.espressif/python_env/idf5.4_py3.11_env/bin/python /home/charles/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/charles/Documents/github/CCI_UdeS/code/build/bootloader/bootloader.bin
Bootloader binary size 0x64d0 bytes. 0x1b30 bytes (21%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from /home/charles/Documents/github/CCI_UdeS/code/main/main.c:17:
/home/charles/Documents/github/CCI_UdeS/code/main/capacitive.h:18:13: warning: 'capacitive_read_task' declared 'static' but never defined [-Wunused-function]
   18 | static void capacitive_read_task();
      |             ^~~~~~~~~~~~~~~~~~~~
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable cci_udes.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/charles/Documents/github/CCI_UdeS/code/build/cci_udes.bin
[7/8] cd /home/charles/Documents/github/CCI_UdeS/code/build/esp-idf/esptool_py && /home/charles/.espressif/python_env/idf5.4_py3.11_env/bin/python /home/charles/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/charles/Documents/github/CCI_UdeS/code/build/partition_table/partition-table.bin /home/charles/Documents/github/CCI_UdeS/code/build/cci_udes.bin
cci_udes.bin binary size 0x3bdb0 bytes. Smallest app partition is 0x100000 bytes. 0xc4250 bytes (77%) free.
[7/8] cd /home/charles/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/charles/esp-idf -D "SERIAL_TOOL=/home/charles/.espressif/python_env/idf5.4_py3.11_env/bin/python;;/home/charles/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/charles/Documents/github/CCI_UdeS/code/build -P /home/charles/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 16MB 0x0 bootloader/bootloader.bin 0x10000 cci_udes.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev3
Serial port /dev/ttyACM0

A fatal error occurred: Could not open /dev/ttyACM0, the port is busy or doesn't exist.
([Errno 2] could not open port /dev/ttyACM0: [Errno 2] No such file or directory: '/dev/ttyACM0')

Hint: Check if the port is correct and ESP connected

FAILED: CMakeFiles/flash /home/charles/Documents/github/CCI_UdeS/code/build/CMakeFiles/flash 
cd /home/charles/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/charles/esp-idf -D "SERIAL_TOOL=/home/charles/.espressif/python_env/idf5.4_py3.11_env/bin/python;;/home/charles/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/charles/Documents/github/CCI_UdeS/code/build -P /home/charles/esp-idf/components/esptool_py/run_serial_tool.cmake
ninja: build stopped: subcommand failed.
